// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ServiceC.Db;

#nullable disable

namespace ServiceC.Db.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250320220226_remove_icon")]
    partial class remove_icon
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ServiceC.Domain.Weather", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Description")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<float>("Temperature")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "temperature");

                    b.Property<float>("TemperatureFeelsLike")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "feelsLike");

                    b.Property<DateTime>("WeatherDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("WindSpeed")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "windSpeed");

                    b.HasKey("Id");

                    b.ToTable("WeatherRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
